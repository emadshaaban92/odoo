<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="ActionpadWidget" owl="1">
        <div class="actionpad ">
            <div class="actionpad-customer d-flex flex-row">
                <button class="button set-partner d-flex flex-row-reverse align-items-center justify-content-between w-100 rounded-0 fw-bold" t-att-class="{'decentered': isLongName}"
                        t-on-click="() => this.trigger('click-partner')">
                    <t t-if="!env.isMobile">
                        <span class="fa-stack">
                            <i class="fa fa-circle fa-stack-2x text-300"/>
                            <i class="fa fa-user fa-stack-1x" role="img" aria-label="Customer" title="Customer" />
                        </span>
                    </t>
                    <t t-if="props.partner">
                        <t t-esc="props.partner.name" />
                    </t>
                    <t t-else="">
                        Customer
                    </t>
                </button>
            </div>
            <div class="actionpad-actions d-flex flex-row">
                <button class="button pay w-50 d-flex flex-column align-items-center justify-content-center rounded-0 fw-bold text-100" t-on-click="() => this.trigger(props.actionToTrigger or 'click-pay')">
                    <span class="pay-circle fa-stack fa-2x" t-att-class="{ 'highlight': props.isActionButtonHighlighted }">
                        <i class="fa fa-circle fa-stack-2x text-dark"/>
                        <i class="fa fa-chevron-right fa-stack-1x text-white" role="img" aria-label="Pay" title="Pay" />
                    </span>
                    <t t-esc="props.actionName" />
                </button>
                <div class="actionpad-actions-extra w-50">

                  <div t-if="props.controlButtons" class="control-buttons">
                      <t t-set="maxDisplayed" t-value="6"/>
                      <t t-set="displayMore" t-value="props.controlButtons.length > maxDisplayed"/>
                      <t t-foreach="props.controlButtons" t-as="cb" t-key="cb.name">
                          <t t-if="maxDisplayed > 1 || !displayMore">
                              <t t-component="cb.component" t-key="cb.name" order="props.order"/>
                          </t>
                          <t t-else="">
                              <button class="button control-button">More</button>
                              <t t-if="maxDisplayed ===1">
                                  <button class="button control-button">More</button>
                              </t>
                              <t t-if="maxDisplayed > 1">
                                  <t t-component="cb.component" t-key="cb.name"/>
                              </t>
                          </t>

                          <t t-set="maxDisplayed" t-value="maxDisplayed - 1"/>
                      </t>
                  </div>
                </div>
            </div>
            <button t-if="env.isMobile" class="button back-button" t-on-click="props.onSwitchPane">
                <i class="fa fa-angle-double-left"/>
                Back
            </button>

        </div>
    </t>

</templates>
