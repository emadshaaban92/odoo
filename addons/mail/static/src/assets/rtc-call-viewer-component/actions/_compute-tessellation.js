/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Dev/comment}
        Finds a tile layout and dimensions that respects param0.aspectRatio while maximizing
        the total area covered by the tiles within the specified container dimensions.
    {Record/insert}
        [Record/models]
            Action
        [Action/name]
            RtcCallViewerComponent/_computeTessellation
        [Action/params]
            aspectRatio
                [type]
                    Number
                [default]
                    1
            containerHeight
                [type]
                    Number
            containerWidth
                [type]
                    Number
            tileCount
                [type]
                    Number
        [Action/returns]
            Object
        [Action/behavior]
            :optimalLayout
                {Record/insert}
                    [Record/models]
                        Object
                    [area]
                        0
                    [cols]
                        0
                    [tileHeight]
                        0
                    [tileWidth]
                        0
            {foreach}
                {Record/insert}
                    [Record/models]
                        Range
                    [start]
                        0
                    [end]
                        tileCount
                    [step]
                        1
            .{as}
                columnCount
            .{do}
                :rowCount
                    {Math/ceil}
                        @tileCount
                        .{/}
                            @columnCount
                :potentialHeight
                    @containerWidth
                    .{/}
                        @columnCount
                        .{*}
                            @aspectRatio
                :potentialWidth
                    @containerHeight
                    .{/}
                        @rowCount
                {if}
                    @potentialHeight
                    .{>}
                        @potentialWidth
                .{then}
                    :tileHeight
                        {Math/floor}
                            @potentialWidth
                    :tileWidth
                        {Math/floor}
                            @tileHeight
                            .{*}
                                @aspectRatio
                .{else}
                    :tileWidth
                        {Math/floor}
                            @containerWidth
                            .{/}
                                @columnCount
                    :tileHeight
                        {Math/floor}
                            @tileWidth
                            .{/}
                                @aspectRatio
                :area
                    @tileHeight
                    .{*}
                        @tileWidth
                {if}
                    @area
                    .{<=}
                        @optimalLayout
                        .{Dict/get}
                            area
                .{then}
                    {continue}
                {Record/update}
                    [0]
                        @optimalLayout
                    [1]
                        [area]
                            @area
                        [columnCount]
                            @columnCount
                        [tileHeight]
                            @tileHeight
                        [tileWidth]
                            @tileWidth
            @optimalLayout
`;
