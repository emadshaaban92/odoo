/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Record/insert}
        [Record/models]
            Test
        [Test/name]
            all messages in "Inbox" in "History" after marked all as read
        [Test/model]
            DiscussComponent
        [Test/assertions]
            2
        [Test/scenario]
            :messageOffset
                200
            {Dev/comment}
                message expected to be found in Inbox
            :testEnv
                {Record/insert}
                    [Record/models]
                        Env
            @testEnv
            .{Record/insert}
                {foreach}
                    {Record/insert}
                        [Record/models]
                            Range
                        [start]
                            @messageOffset
                        [end]
                            @messageOffset
                            .{+}
                                40
                .{as}
                    id
                .{do}
                    []
                        [Record/models]
                            mail.message
                        [mail.message/body]
                            not empty
                        [mail.message/id]
                            @id
                            {Dev/comment}
                                will be used to link notification to message
                        [mail.message/needaction]
                            true
                    []
                        {Dev/comment}
                            notification to have message in Inbox
                        [Record/models]
                            mail.notification
                        [mail.notification/notification_type]
                            inbox
                        [mail.notification/mail_message_id]
                            @id
                            {Dev/comment}
                                id of related message
                        [mail.notification/res_partner_id]
                            @record
                            .{Test/data}
                            .{Data/currentPartnerId}
                            {Dev/comment}
                                must be for current partner
            :server
                {Record/insert}
                    [Record/models]
                        Server
                    [Server/data]
                        @record
                        .{Test/data}
            @testEnv
            .{Record/insert}
                [Record/models]
                    DiscussComponent
            @testEnv
            .{UI/waitUntilEvent}
                [eventName]
                    o-component-message-list-scrolled
                [message]
                    should wait until inbox scrolled to its last message initially
                [predicate]
                    {Record/insert}
                        [Record/models]
                            Function
                        [Function/in]
                            orderedMessages
                            scrollTop
                            thread
                        [Function/out]
                            @thread
                            .{Thread/model
                            .{=}
                                mail.box
                            .{&}
                                @thread
                                .{Thread/id}
                                .{=}
                                    inbox
                            .{&}
                                @orderedMessages
                                .{Collection/length}
                                .{=}
                                    30
                            .{&}
                                @scrollTop
                                .{=}
                                    @thread
                                    .{Thread/threadViews}
                                    .{Collection/first}
                                    .{ThreadView/messageListComponents}
                                    .{Collection/first}
                                    .{web.Element/scrollHeight}
                                    .{-}
                                        @thread
                                        .{Thread/threadViews}
                                        .{Collection/first}
                                        .{ThreadView/messageListComponents}
                                        .{Collection/first}
                                        .{web.Element/clientHeight}
            @testEnv
            .{Component/afterNextRender}
                @testEnv
                .{UI/click}
                    @testEnv
                    .{Record/all}
                        [Record/models]
                            ThreadViewTopbarComponent
                    .{Collection/first}
                    .{ThreadViewTopbarComponent/markAllReadButton}
            {Test/assert}
                []
                    @testEnv
                    .{Env/inbox}
                    .{Thread/cache}
                    .{ThreadCache/messages}
                    .{Collection/length}
                    .{=}
                        0
                []
                    there should no message in Inbox anymore

            @testEnv
            .{UI/afterEvent}
                [eventName]
                    o-component-message-list-scrolled
                [func]
                    @testEnv
                    .{UI/click}
                        @testEnv
                        .{Env/history}
                        .{Thread/discussSidebarCategoryItemComponents}
                        .{Collection/first}
                [message]
                    should wait until history scrolled to its last message after opening it from the discuss sidebar
                [predicate]
                    {Record/insert}
                        [Record/models]
                            Function
                        [Function/in]
                            orderedMessages
                            scrollTop
                            thread
                        [Function/out]
                            @thread
                            .{Thread/model}
                            .{=}
                                mail.box
                            .{&}
                                @thread
                                .{Thread/id}
                                .{=}
                                    history
                            .{&}
                                @orderedMessages
                                .{Collection/length}
                                .{=}
                                    30
                            .{&}
                                @scrollTop
                                .{=}
                                    @thread
                                    .{Thread/threadViews}
                                    .{Collection/first}
                                    .{ThreadView/messageListComponents}
                                    .{Collection/first}
                                    .{web.Element/scrollHeight}
                                    .{-}
                                        @thread
                                        .{Thread/threadViews}
                                        .{Collection/first}
                                        .{ThreadView/messageListComponents}
                                        .{Collection/first}
                                        .{web.Element/clientHeight}

            {Dev/comment}
                simulate a scroll to top to load more messages
            @testEnv
            .{UI/afterEvent}
                [eventName]
                    o-thread-view-hint-processed
                [func]
                    @testEnv
                    .{Record/update}
                        [0]
                            @testEnv
                            .{Discuss/thread}
                            .{Thread/threadViews}
                            .{Collection/first}
                            .{ThreadView/messageListComponents}
                            .{Collection/first}
                        [1]
                            [web.Element/scrollTop]
                                0
                [message]
                    should wait until mailbox history loaded more messages after scrolling to top
                [predicate]
                    {Record/insert}
                        [Record/models]
                            Function
                        [Function/in]
                            hint
                            threadViewer
                        [Function/out]
                            @hint
                            .{Hint/type}
                            .{=}
                                more-messages-loaded
                            .{&}
                                @threadViewer
                                .{ThreadViewer/thread}
                                .{Thread/model}
                                .{=}
                                    mail.box
                            .{&}
                                @threadViewer
                                .{ThreadViewer/thread}
                                .{Thread/id}
                                .{=}
                                    history
            {Test/assert}
                []
                    @testEnv
                    .{Env/history}
                    .{Thread/cache}
                    .{ThreadCache/messages}
                    .{Collection/length}
                    .{=}
                        40
                []
                    there should be 40 messages in History
`;
