/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Record/insert}
        [Record/models]
            Test
        [Test/name]
            should not scroll on receiving new message if the list is initially scrolled anywhere else than bottom (asc order)
        [Test/model]
            ThreadViewComponent
        [Test/assertions]
            3
        [Test/scenario]
            :testEnv
                {Record/insert}
                    [Record/models]
                        Env
            @testEnv
            .{Record/insert}
                []
                    [Record/models]
                        mail.channel
                    [mail.channel/id]
                        20
                {foreach}
                    {Recod/insert}
                        [Record/models]
                            Range
                        [start]
                            0
                        [end]
                            10
                .{do}
                    []
                        [Record/models]
                            mail.message
                        [mail.message/body]
                            not empty
                        [mail.message/model]
                            mail.channel
                        [mail.message/res_id]
                            20
                []
                    {Dev/comment}
                        Needed partner & user to allow simulation of message reception
                    [Record/models]
                        res.partner
                    [res.partner/id]
                        11
                    [res.partner/name]
                        Foreigner partner
                []
                    [Record/models]
                        res.users
                    [res.users/id]
                        42
                    [res.users/name]
                        Foreigner user
                    [res.users/partner_id]
                        11
            @testEnv
            .{Record/insert}
                [Record/models]
                    Server
                [Server/data]
                    @record
                    .{Test/data}
            :thread
                @testEnv
                .{Record/findById}
                    [Thread/id]
                        20
                    [Thread/model]
                        mail.channel
            :threadViewer
                @testEnv
                .{Record/insert}
                    [Record/models]
                        ThreadViewer
                    [ThreadViewer/hasThreadView]
                        true
                    [ThreadViewer/thread]
                        @thread
            @testEnv
            .{UI/afterEvent}
                [eventName]
                    o-component-message-list-scrolled
                [func]
                    @testEnv
                    .{Record/insert}
                        [Record/models]
                            ThreadViewComponent
                        [ThreadViewComponent/order]
                            asc
                        [ThreadViewComponent/threadView]
                            @threadViewer
                            .{ThreadViewer/threadView}
                [message]
                    should wait until channel 20 scrolled initially
                [predicate]
                    {Record/insert}
                        [Record/models]
                            Function
                        [Function/in]
                            threadViewer
                                [as]
                                    tv
                        [Function/out]
                            @threadViewer
                            .{=}
                                @tv
            {Test/assert}
                []
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/messageListComponents}
                    .{Collection/first}
                    .{web.Element/scrollTop}
                    .{=}
                        @threadViewer
                        .{ThreadViewer/threadView}
                        .{ThreadView/messageListComponents}
                        .{Collection/first}
                        .{web.Element/scrollHeight}
                        .{-}
                            @threadViewer
                            .{ThreadViewer/threadView}
                            .{ThreadView/messageListComponents}
                            .{Collection/first}
                            .{web.Element/clientHeight}
                []
                    should have scrolled to bottom of channel 20 initially

            @testEnv
            .{UI/afterEvent}
                [eventName]
                    o-component-message-list-scrolled
                [func]
                    @testEnv
                    .{Record/update}
                        [0]
                            @threadViewer
                            .{ThreadViewer/threadView}
                            .{ThreadView/messageListComponents}
                            .{Collection/first}
                        [1]
                            [web.Element/scrollTop]
                                0
                [message]
                    should wait until channel 20 processed manual scroll
                [predicate]
                    {Record/insert}
                        [Record/models]
                            Function
                        [Function/in]
                            threadViewer
                                [as]
                                    tv
                        [Function/out]
                            @threadViewer
                            .{=}
                                @tv
            {Test/assert}
                []
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/messageListComponents}
                    .{Collection/first}
                    .{web.Element/scrollTop}
                    .{=}
                        0
                []
                    should have scrolled to the top of channel 20 manually

            {Dev/comment}
                simulate receiving a message
            @testEnv
            .{UI/afterEvent}
                [eventName]
                    o-thread-view-hint-processed
                [func]
                    @testEnv
                    .{Env/owlEnv}
                    .{Dict/get}
                        services
                    .{Dict/get}
                        rpc
                    .{Function/call}
                        [route]
                            /mail/chat_post
                        [params]
                            [context]
                                [mockedUserId]
                                    42
                            [message_content]
                                hello
                            [uuid]
                                @thread
                                .{Thread/uuid}
                [message]
                    should wait until channel 20 processed new message hint
                [predicate]
                    {Record/insert}
                        [Record/models]
                            Function
                        [Function/in]
                            hint
                            threadViewer
                                [as]
                                    tv
                        [Function/out]
                            @threadViewer
                            .{=}
                                @tv
                            .{&}
                                @hint
                                .{Hint/type}
                                .{=}
                                    message-received
            {Test/assert}
                []
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/messageListComponents}
                    .{Collection/first}
                    .{web.Element/scrollTop}
                    .{=}
                        0
                []
                    should not scroll on receiving new message because the list is initially scrolled anywhere else than bottom
`;
