/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Record/insert}
        [Record/models]
            Test
        [Test/name]
            Retry loading more messages on failed load more messages should load more messages
        [Test/model]
            ThreadViewComponent
        [Test/assertions]
            0
        [Test/scenario]
            {Dev/comment}
                first call needs to be successful as it is the initial loading of messages
                second call comes from load more and needs to fail in order to show the error alert
                any later call should work so that retry button and load more clicks would now work
            :messageFetchShouldFail
                false
            :testEnv
                {Record/insert}
                    [Record/models]
                        Env
            @testEnv
            .{Record/insert}
                []
                    [Record/models]
                        mail.channel
                    [mail.channel/channel_type]
                        channel
                    [mail.channel/id]
                        20
                    [mail.channel/is_pinned]
                        true
                    [mail.channel/name]
                        General
                {foreach}
                    {Record/insert}
                        [Record/models]
                            Range
                        [start]
                            0
                        [end]
                            90
                .{as}
                    id
                .{do}
                    []
                        [Record/models]
                            mail.message
                        [mail.message/body]
                            coucou
                        [mail.message/id]
                            @id
                        [mail.message/model]
                            mail.channel
                        [mail.message/res_id]
                            20
            @testEnv
            .{Record/insert}
                [Record/models]
                    Server
                [Server/data]
                    @record
                    .{Test/data}
                [Server/mockRPC]
                    {Record/insert}
                        [Record/models]
                            Function
                        [Function/in]
                            route
                            args
                            original
                        [Function/out]
                            {if}
                                @route
                                .{=}
                                    /mail/channel/messages
                            .{then}
                                {if}
                                    @messageFetchShouldFail
                                .{then}
                                    {Error/raise}
                            @original
            :thread
                @testEnv
                .{Record/findById}
                    [Thread/id]
                        20
                    [Thread/model]
                        mail.channel
            :threadViewer
                @testEnv
                .{Record/insert}
                    [Record/models]
                        ThreadViewer
                    [ThreadViewer/hasThreadView]
                        true
                    [ThreadViewer/thread]
                        @thread
            @testEnv
            .{Record/insert}
                [Record/models]
                    ThreadViewComponent
                [ThreadViewComponent/threadView]
                    @threadViewer
                    .{ThreadViewer/threadView}
            :messageFetchShouldFail
                true
            @testEnv
            .{Component/afterNextRender}
                @testEnv
                .{UI/click}
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/messageListComponents}
                    .{Collection/first}
                    .{MessageListComponent/loadMore}
            :messageFetchShouldFail
                false
            @testEnv
            .{UI/afterEvent}
                [eventName]
                    o-thread-view-hint-processed
                [func]
                    @testEnv
                    .{UI/click}
                        @threadViewer
                        .{ThreadViewer/threadView}
                        .{threadView/messageListView}
                        .{MessageListView/messageListComponents}
                        .{Collection/first}
                        .{MessageListComponent/alertLoadingFailedRetryButton}
                [message]
                    should wait until channel 20 loaded more messages after clicked on load more
                [predicate]
                    {Record/insert}
                        [Record/models]
                            Function
                        [Function/in]
                            hint
                            threadViewer
                        [Function/out]
                            @hint
                            .{Hint/type}
                            .{=}
                                more-messages-loaded
                            .{&}
                                @threadViewer
                                .{ThreadViewer/thread}
                                .{Thread/model}
                                .{=}
                                    mail.channel
                            .{&}
                                @threadViewer
                                .{ThreadViewer/thread}
                                .{Thread/id}
                                .{=}
                                    20
`;
