/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Record/insert}
        [Record/models]
            Action
        [Action/name]
            ChatWindowManager/openThread
        [Action/params]
            chatWindowManager
                [type]
                    ChatWindowManager
            isFolded
                [default]
                    false
            makeActive
                [default]
                    false
            notifyServer
                [default]
                    {Device/isMobile}
                    .{isFalsy}
            replaceNewMessage
                [default]
                    false
            thread
                [type]
                    Thread
            focus
                [type]
                    Boolean
                [description]
                    if set, set focus the chat window to open.
        [Action/behavior]
            :chatWindow
                @chatWindowManager
                .{ChatWindowManager/chatWindows}
                .{Collection/find}
                    {Record/insert}
                        [Record/models]
                            Function
                        [Function/in]
                            item
                        [Function/out]
                            @item
                            .{ChatWindow/thread}
                            .{=}
                                @thread
            {if}
                @chatWindow
                .{isFalsy}
            .{then}
                :chatWindow
                    {Record/insert}
                        [Record/models]
                            ChatWindow
                        [ChatWindow/isFolded]
                            @isFolded
                        [ChatWindow/manager]
                            @chatWindowManager
                        [ChatWindow/thread]
                            @thread
            .{else}
                {Record/update}
                    [0]
                        @chatWindow
                    [1]
                        [ChatWindow/isFolded]
                            @isFolded
            {if}
                @replaceNewMessage
                .{&}
                    @chatWindowManager
                    .{ChatWindowManager/newMessageChatWindow}
            .{then}
                {ChatWindowManager/swap}
                    [0]
                        @chatWindowManager
                    [1]
                        @chatWindow
                    [2]
                        @chatWindowManager
                        .{ChatWindowManager/newMessageChatWindow}
                {ChatWindow/close}
                    @chatWindowManager
                    .{ChatWindowManager/newMessageChatWindow}
            {if}
                @makeActive
            .{then}
                {Dev/comment}
                    avoid double notify at this step, it will already be
                    done at the end of the current method
                {ChatWindow/makeActive}
                    [0]
                        @chatWindow
                    [1]
                        [focus]
                            @focus
                        [notifyServer]
                            false
            {Dev/comment}
                Flux specific: notify server of chat window being opened.
            {if}
                @notifyServer
                .{&}
                    {Env/currentGuest}
                    .{isFalsy}
            .{then}
                :foldState
                    {if}
                        @chatWindow
                        .{ChatWindowManager/isFolded}
                    .{then}
                        folded
                    .{else}
                        open
                {Thread/notifyFoldStateToServer}
                    @thread
                    @foldState
`;
