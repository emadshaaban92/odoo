/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Record/insert}
        [Record/models]
            onChange
        [onChange/name]
            _onChangeDetectSuggestionDelimiterPosition
        [onChange/model]
            ComposerView
        [onChange/dependencies]
            ComposerView/composer
                Composer/textInputContent
                Composer/textInputCursorEnd
                Composer/textInputCursorStart
        [onChange/behavior]
            {if}
                @record
                .{ComposerView/composer}
                .{isFalsy}
            .{then}
                {break}
            {if}
                @record
                .{ComposerView/composer}
                .{Composer/textInputCursorStart}
                .{!=}
                    @record
                    .{ComposerView/composer}
                    .{Composer/textInputCursorEnd}
            .{then}
                {Dev/comment}
                    avoid interfering with multi-char selection
                {Record/update}
                    [0]
                        @record
                    [1]
                        [ComposerView/suggestionDelimiterPosition]
                            {Record/empty}
            :candidatePositions
                {Record/insert}
                    [Record/models]
                        Collection
            {Dev/comment}
                keep the current delimiter if it is still valid
            {if}
                @record
                .{ComposerView/suggestionDelimiterPosition}
                .{!=}
                    undefined
                .{&}
                    @record
                    .{ComposerView/suggestionDelimiterPosition}
                    .{<}
                        @record
                        .{ComposerView/composer}
                        .{Composer/textInputCursorStart}
            .{then}
                {Collection/push}
                    [0]
                        @candidatePositions
                    [1]
                        @record
                        .{ComposerView/suggestionDelimiterPosition}
            {Dev/comment}
                consider the char before the current cursor position if the
                current delimiter is no longer valid (or if there is none)
            {if}
                @record
                .{ComposerView/composer}
                .{Composer/textInputCursorStart}
                .{>}
                    0
            .{then}
                {Collection/push}
                    [0]
                        @candidatePositions
                    [1]
                        @record
                        .{ComposerView/composer}
                        .{Composer/textInputCursorStart}
                        .{-}
                            1
            :suggestionDelimiters
                {Record/insert}
                    [Record/models]
                        Collection
                    {String/atSing}
                    {String/colon}
                    #
                    /
            {foreach}
                @candidatePositions
            .{as}
                candidatePosition
            .{do}
                {if}
                    @candidatePosition
                    .{<}
                        0
                    .{|}
                        @candidatePosition
                        .{>=}
                            @record
                            .{ComposerView/composer}
                            .{Composer/textInputContent}
                            .{String/length}
                .{then}
                    {continue}
                :candidateChar
                    @record
                    .{ComposerView/composer}
                    .{Composer/textInputContent}
                    .{Collection/at}
                        @candidatePosition
                {if}
                    @candidateChar
                    .{=}
                        /
                    .{&}
                        @candidatePosition
                        .{!=}
                            0
                .{then}
                    {continue}
                {if}
                    @suggestionDelimiters
                    .{Collection/includes}
                        @candidateChar
                    .{isFalsy}
                .{then}
                    {continue}
                :charBeforeCandidate
                    @record
                    .{ComposerView/composer}
                    .{Composer/textInputContent}
                    .{Collection/at}
                        @candidatePosition
                        .{-}
                            1
                {if}
                    @charBeforeCandidate
                    .{&}
                        /\s/
                        .{Regex/test}
                            @charBeforeCandidate
                        .{isFalsy}
                .{then}
                    {continue}
                {Record/update}
                    [0]
                        @record
                    [1]
                        [ComposerView/suggestionDelimiterPosition]
                            @candidatePosition
                {break}
            {Record/update}
                [0]
                    @record
                [1]
                    [ComposerView/suggestionDelimiterPosition]
                        {Record/empty}
`;