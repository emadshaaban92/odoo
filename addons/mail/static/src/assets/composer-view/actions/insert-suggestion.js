/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Dev/comment}
        Inserts the active suggestion at the current cursor position.
    {Record/insert}
        [Record/models]
            Action
        [Action/name]
            ComposerView/insertSuggestion
        [Action/params]
            record
                [type]
                    ComposerView
        [Action/behavior]
            :cursorPosition
                @record
                .{ComposerView/composer}
                .{Composer/textInputCursorStart}
            :textLeft
                @record
                .{ComposerView/composer}
                .{Composer/textInputContent}
                .{String/substring}
                    [0]
                        0
                    [1]
                        @record
                        .{ComposerView/suggestionDelimiterPosition}
                        .{+}
                            1
            :textRight
                @record
                .{ComposerView/composer}
                .{Composer/textInputContent}
                .{String/substring}
                    [0]
                        @cursorPosition
                    [1]
                        @record
                        .{ComposerView/composer}
                        .{Composer/textInputContent}
                        .{String/length}
            {if}
                @record
                .{ComposerView/suggestionDelimiter}
                .{=}
                    :
            .{then}
                :textLeft
                    @record
                    .{ComposerView/composer}
                    .{Composer/textInputContent}
                    .{String/substring}
                        [0]
                            0
                        [1]
                            @record
                            .{ComposerView/suggestionDelimiterPosition}
                :textRight
                    @record
                    .{ComposerView/composer}
                    .{Composer/textInputContent}
                    .{String/substring}
                        [0]
                            @cursorPosition
                        [1]
                            @record
                            .{ComposerView/composer}
                            .{Composer/textInputContent}
                            .{String/length}
            :recordReplacement
                {SuggestionRecord/getMentionText}
                    @record
                    .{ComposerView/activeSuggestedRecord}
            :updateData
                {Record/insert}
                    [Record/models]
                        Object
                    [Composer/isLastStateChangeProgrammatic]
                        true
                    [Composer/textInputContent]
                        @textLeft
                        .{+}
                            @recordReplacement
                        .{+}
                            {String/whitespace}
                        .{+}
                            @textRight
                    [Composer/textInputCursorEnd]
                        @textLeft
                        .{Striong/length}
                        .{+}
                            @recordReplacement
                            .{String/length}
                        .{+}
                            1
                    [Composer/textInputCursorStart]
                        @textLeft
                        .{String/length}
                        .{+}
                            @recordReplacement
                            .{String/length}
                        .{+}
                            1
            {Dev/comment}
                Specific cases for channel and partner mentions: the message with
                the mention will appear in the target channel, or be notified to
                the target partner.
            {switch}
                this.activeSuggestedRecord.constructor.modelName
            .{case}
                [Thread]
                    {Record/update}
                        [0]
                            @updateData
                        [1]
                            [Composer/mentionedChannels]
                                {Field/add}
                                    @record
                                    .{ComposerView/activeSuggestedRecord}
                [Partner]
                    {Record/update}
                        [0]
                            @updateData
                        [1]
                            [Composer/mentionedPartners]
                                {Field/add}
                                    @record
                                    .{ComposerView/activeSuggestedRecord}
            {Record/update}
                [0]
                    @record
                    .{ComposerView/composer}
                [1]
                    @updateData
`;
