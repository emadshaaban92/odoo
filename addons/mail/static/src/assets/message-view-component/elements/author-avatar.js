/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Record/insert}
        [Record/models]
            Element
        [Element/name]
            authorAvatar
        [Element/model]
            MessageViewComponent
        [web.Element/class]
            rounded-circle
            {if}
                @record
                .{MessageViewComponent/hasAuthorOpenChat}
            .{then}
                o_redirect
        [web.Element/tag]
            img
        [web.Element/src]
            {if}
                @record
                .{MessageViewComponent/messageView}
                .{MessageView/message}
                .{Message/author}
                .{&}
                    @record
                    .{MessageViewComponent/messageView}
                    .{MessageView/message}
                    .{Message/originThread}
                    .{isFalsy}
                    .{|}
                        @record
                        .{MessageViewComponent/messageView}
                        .{MessageView/message}
                        .{Message/originThread}
                        .{Thread/model}
                        .{!=}
                            mail.channel
            .{then}
                {Dev/comment}
                    TODO FIXME for public user this might not be accessible.
                    task-2223236 we should probably use the correspondig attachment
                    id + access token or create a dedicated route to get message
                    image, checking the access right of the message
                @record
                .{MessageViewComponent/messageView}
                .{MessageView/message}
                .{Message/author}
                .{Partner/avatarUrl}
            .{elif}
                @record
                .{MessageViewComponent/messageView}
                .{MessageView/message}
                .{Message/author}
                .{&}
                    @record
                    .{MessageViewComponent/messageView}
                    .{MessageView/message}
                    .{Message/originThread}
                .{&}
                    @record
                    .{MessageViewComponent/messageView}
                    .{MessageView/message}
                    .{Message/originThread}
                    .{Thread/model}
                    .{=}
                        mail.channel
            .{then}
                    /mail/channel/
                    .{+}
                        @record
                        .{MessageViewComponent/messageView}
                        .{MessageView/message}
                        .{Message/originThread}
                        .{Thread/id}
                    .{+}
                        /partner/
                    .{+}
                        @record
                        .{MessageViewComponent/messageView}
                        .{MessageView/message}
                        .{Message/author}
                        .{Partner/id}
                    .{+}
                        /avatar_128
            .{elif}
                @record
                .{MessageViewComponent/messageView}
                .{MessageView/message}
                .{Message/guestAuthor}
                .{&}
                    @record
                    .{MessageViewComponent/messageView}
                    .{MessageView/message}
                    .{Message/originThread}
                    .{isFalsy}
                    .{|}
                        @record
                        .{MessageViewComponent/messageView}
                        .{MessageView/message}
                        .{Message/originThread}
                        .{Thread/model}
                        .{!=}
                            mail.channel
            .{then}
                @record
                .{MessageViewComponent/messageView}
                .{MessageView/message}
                .{Message/guestAuthor}
                .{Guest/avatarUrl}
            .{elif}
                @record
                .{MessageViewComponent/messageView}
                .{MessageView/message}
                .{Message/guestAuthor}
                .{&}
                    @record
                    .{MessageViewComponent/messageView}
                    .{MessageView/message}
                    .{Message/originThread}
                .{&}
                    @record
                    .{MessageViewComponent/messageView}
                    .{MessageView/message}
                    .{Message/originThread}
                    .{Thread/model}
                    .{=}
                        mail.channel
            .{then}
                /mail/channel/
                .{+}
                    @record
                    .{MessageViewComponent/messageView}
                    .{MessageView/message}
                    .{Message/originThread}
                    .{Thread/id}
                .{+}
                    /guest/
                .{+}
                    @record
                    .{MessageViewComponent/messageView}
                    .{MessageView/message}
                    .{Message/guestAuthor}
                    .{Guest/id}
                .{+}
                    /avatar_128
            .{elif}
                @record
                .{MessageViewComponent/messageView}
                .{MessageView/message}
                .{Message/type}
                .{=}
                    email
            .{then}
                /mail/static/src/img/email_icon.png
            .{else}
                /mail/static/src/img/smiley/avatar.jpg
        [web.Element/title]
            {if}
                @record
                .{MessageViewComponent/hasAuthorOpenChat}
            .{then}
                {Locale/text}
                    Open chat
        [web.Element/alt]
            {Locale/text}
                Avatar
        [web.Element/style]
            [web.scss/height]
                {scss/map-get}
                    {scss/$sizes}
                    100
            [web.scss/width]
                {scss/map-get}
                    {scss/$sizes}
                    100
            [web.scss/object-fit]
                cover
`;
