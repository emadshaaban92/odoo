/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Record/insert}
        [Record/models]
            Element
        [Element/name]
            root
        [Element/model]
            DropZoneComponent
        [Element/onDragenter]
            {web.Event/preventDefault}
                @ev
            {if}
                @record
                .{DropZoneComponent/_dragCount}
                .{=}
                    0
            .{then}
                {Record/update}
                    [0]
                        @record
                    [1]
                        [DropZoneComponent/isDraggingInside]
                            true
            {Record/update}
                [0]
                    @record
                [1]
                    [DropZoneComponent/_dragCount]
                        {Field/add}
                            1
        [Element/onDragleave]
            {Record/update}
                [0]
                    @record
                [1]
                    [DropZoneComponent/_dragCount]
                        {Field/remove}
                            1
            {if}
                @record
                .{DropZoneComponent/_dragCount}
                .{=}
                    0
            .{then}
                {Record/update}
                    [0]
                        @record
                    [1]
                        [DropZoneComponent/isDraggingInside]
                            false
        [Element/onDragover]
            {Dev/comment}
                Prevents default (from the template) in order to receive the drop event.
                The drop effect cursor works only when set on dragover.
            {web.Event/preventDefault}
                @ev
            {Record/update}
                [0]
                    @ev
                    .{web.DragEvent/dataTransfer}
                [1]
                    [web.DataTransfer/dropEffect]
                        copy
        [Element/onDrop]
            {web.Event/preventDefault}
                @ev
            {if}
                {DropZoneComponent/_isDragSourceExternalFile}
                    [0]
                        @record
                    [1]
                        @ev
                        .{web.DragEvent/dataTransfer}
            .{then}
                {web.Event/stopPropagation}
                    @ev
                {FileUploader/uploadFiles}
                    [0]
                        {if}
                            @record
                            .{DropZoneComponent/parentComponent}
                            .{Record/models}
                            .{Collection/includes}
                                ComposerViewComponent
                        .{then}
                            @record
                            .{DropZoneComponent/parentComponent}
                            .{DropZoneComponent/parentComponent}
                            .{ComposerViewComponent/composerView}
                            .{ComposerView/fileUploader}
                        .{elif}
                            @record
                            .{DropZoneComponent/parentComponent}
                            .{Record/models}
                            .{Collection/includes}
                                AttachmentBoxComponent
                        .{then}
                            @record
                            .{DropZoneComponent/parentComponent}
                            .{DropZoneComponent/parentComponent}
                            .{AttachmentBoxComponent/attachmentBoxView}
                            .{AttachmentBoxView/fileUploader}
                        @record
                    [1]
                        @ev
                        .{web.DragEvent/files}
                {Record/update}
                    [0]
                        @record
                        .{DropZoneComponent/parentComponent}
                        .{Component/dropzoneVisible}
                    [1]
                        [DropzoneVisibleComponentHook/value]
                            false
            {Record/update}
                [0]
                    @record
                [1]
                    [DropZoneComponent/isDraggingInside]
                        false
        [web.Element/style]
            [web.scss/display]
                flex
            [web.scss/position]
                absolute
            [web.scss/top]
                0
            [web.scss/left]
                0
            [web.scss/height]
                {scss/map-get}
                    {scss/$sizes}
                    100
            [web.scss/width]
                {scss/map-get}
                    {scss/$sizes}
                    100
            [web.scss/z-index]
                1
            [web.scss/align-items]
                center
            [web.scss/justify-content]
                center
            [web.scss/color]
                {scss/$o-enterprise-primary-color}
            [web.scss/background]
                {scss/rgba}
                    255
                    255
                    255
                    0.9
            [web.scss/border]
                2px
                dashed
                {scss/$o-enterprise-primary-color}
            {if}
                @record
                .{DropZoneComponent/isDraggingInside}
            .{then}
                [web.scss/border-width]
                    5px
`;
